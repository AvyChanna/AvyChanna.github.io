<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maths on Bits &amp; Pieces</title><link>/tags/maths/</link><description>Recent content in maths on Bits &amp; Pieces</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>aschanna123@gmail.com (Avneet Singh)</managingEditor><webMaster>aschanna123@gmail.com (Avneet Singh)</webMaster><copyright>&amp;copy; Avneet Singh</copyright><lastBuildDate>Sat, 23 May 2020 14:49:49 +0530</lastBuildDate><atom:link href="/tags/maths/index.xml" rel="self" type="application/rss+xml"/><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-2/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-2/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-3/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-3/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-4/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-4/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-5/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-5/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-6/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-6/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy-7/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy-7/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer-copy/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer-copy/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item><item><title>Number Theory Primer</title><link>/posts/number-theory-primer/</link><pubDate>Sat, 23 May 2020 14:49:49 +0530</pubDate><author>aschanna123@gmail.com (Avneet Singh)</author><guid>/posts/number-theory-primer/</guid><description>A beginner friendly explaination of some select algorithms in number theory. This is, by no means, a complete/detailed post. For more information on these algorithms, consult a reliable source like Wikipedia.
Greatest Common Divisor GCD (also called HCF) finds common divisors of 2 numbers.
Shortcut -&amp;gt; $ gcd(a,b) = gcd(a\%b, b) $.
The following is an implementation of Euclidean Algorithm.
def gcd(x, y): &amp;#39;&amp;#39;&amp;#39;finds GCD of 2 positive integers&amp;#39;&amp;#39;&amp;#39; while y: y, x = x % y, y return x # Or simply do -&amp;gt; # from math import gcd # result = gcd(25, 15) We use divison lemma $a = bq+r$.</description></item></channel></rss>